{
	"info": {
		"_postman_id": "705fa9b8-f7df-4b18-a7f9-135af83a913b",
		"name": "Todo API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Create todo",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"given valid body > when post > should respond with 201 created\", () => {",
							"    pm.response.to.have.status(201);",
							"    const { todoId } = pm.response.json();",
							"    pm.globals.set(\"todoId\", todoId);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"My first todo\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/todo",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"todo"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get todo",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"given todo > when get > should respond with 200 and todo\", () => {",
							"    pm.response.to.have.status(200);",
							"    const todo = pm.response.json();",
							"    pm.expect(todo).to.eql({",
							"        todoId: pm.globals.get(\"todoId\"),",
							"        name: \"My first todo\",",
							"        done: false,",
							"    });",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/todo/{{todoId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"todo",
						"{{todoId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Todo",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"given todo > when put > should respond with 200\", () => {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"My updated todo\",\n    \"done\": true\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/todo/{{todoId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"todo",
						"{{todoId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get updated todo",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"given updated todo > when get > should respond with 200 and updated todo\", () => {",
							"    pm.response.to.have.status(200);",
							"    const todo = pm.response.json();",
							"    pm.expect(todo).to.eql({",
							"        todoId: pm.globals.get(\"todoId\"),",
							"        name: \"My updated todo\",",
							"        done: true,",
							"    });",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/todo/{{todoId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"todo",
						"{{todoId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Todo",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"given todo > when delete > should respond with 200\", () => {",
							"    pm.response.to.have.status(200);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/todo/{{todoId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"todo",
						"{{todoId}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Fail to get deleted todo",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"given deleted todo > when get > should respond with 404\", () => {",
							"    pm.response.to.have.status(404);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/todo/{{todoId}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"todo",
						"{{todoId}}"
					]
				}
			},
			"response": []
		}
	]
}